strict digraph "" {
	0 -> 9;
	0 -> source;
	0 -> "('BigScience', 'Bloom')";
	0 -> "('Bloom', 'science')";
	0 -> "('science', 'source')";
	9 -> 8;
	9 -> company;
	9 -> "('numerous', 'applications')";
	9 -> "('research', 'projects')";
	9 -> "('alternative', 'AI')";
	9 -> "('AI', 'applications')";
	9 -> "('big', 'tech')";
	9 -> "('tech', 'companies')";
	BigScience -> 0;
	BigScience -> "('BigScience', 'Bloom')";
	BigScience -> alternative;
	BigScience -> organized;
	BigScience -> "('BigScience', 'project')";
	BigScience -> 6;
	BigScience -> developed;
	BigScience -> example;
	BigScience -> "('example', 'BigScience')";
	source -> science;
	source -> "('science', 'source')";
	Bloom -> 9;
	Bloom -> BigScience;
	Bloom -> "('BigScience', 'Bloom')";
	Bloom -> "('Bloom', 'science')";
	Bloom -> 2;
	Bloom -> 4;
	Bloom -> training;
	Bloom -> "('training', 'Bloom')";
	Bloom -> prohibits;
	Bloom -> "('Bloom', 'areas')";
	science -> Bloom;
	science -> "('Bloom', 'science')";
	science -> "('science', 'source')";
	1 -> 0;
	1 -> "('BigScience', 'Bloom')";
	1 -> purpose;
	1 -> "('Now', 'true', 'alternative')";
	1 -> "('freely', 'available', 'research')";
	1 -> "('enterprise', 'purposes')";
	Now -> 1;
	Now -> "('Now', 'true', 'alternative')";
	purpose -> enterprise;
	purpose -> "('enterprise', 'purposes')";
	true -> Now;
	true -> "('Now', 'true', 'alternative')";
	alternative -> true;
	alternative -> "('Now', 'true', 'alternative')";
	alternative -> create;
	alternative -> "('alternative', 'AI')";
	freely -> Bloom;
	freely -> "('freely', 'available', 'research')";
	available -> freely;
	available -> "('freely', 'available', 'research')";
	available -> model;
	research -> available;
	research -> "('freely', 'available', 'research')";
	research -> importantly;
	research -> "('research', 'projects')";
	enterprise -> research;
	enterprise -> "('enterprise', 'purposes')";
	2 -> 1;
	2 -> size;
	2 -> "('French', 'National')";
	2 -> "('National', 'Center')";
	2 -> "('Center', 'Scientific')";
	2 -> "('Scientific', 'Research')";
	2 -> "('parameters', 'size')";
	size -> parameter;
	size -> "('parameters', 'size')";
	trained -> Bloom;
	day -> trained;
	supercomputing -> day;
	center -> supercomputing;
	French -> center;
	French -> "('French', 'National')";
	French -> Face;
	French -> "('French', 'government')";
	National -> French;
	National -> "('French', 'National')";
	National -> "('National', 'Center')";
	Center -> National;
	Center -> "('National', 'Center')";
	Center -> "('Center', 'Scientific')";
	Scientific -> Center;
	Scientific -> "('Center', 'Scientific')";
	Scientific -> "('Scientific', 'Research')";
	Research -> Scientific;
	Research -> "('Scientific', 'Research')";
	billion -> Research;
	parameter -> billion;
	parameter -> "('parameters', 'size')";
	3 -> 2;
	3 -> government;
	3 -> "('volunteer', 'researchers')";
	3 -> "('BigScience', 'project')";
	3 -> "('French', 'government')";
	development -> 3;
	development -> datasets;
	development -> "('datasets', 'development')";
	development -> "('development', 'training')";
	government -> French;
	government -> "('French', 'government')";
	involved -> development;
	volunteer -> involved;
	volunteer -> "('volunteer', 'researchers')";
	researcher -> volunteer;
	researcher -> "('volunteer', 'researchers')";
	organized -> researcher;
	project -> BigScience;
	project -> research;
	project -> "('BigScience', 'project')";
	project -> "('research', 'projects')";
	coordinated -> project;
	Hugging -> coordinated;
	Hugging -> free;
	Face -> Hugging;
	4 -> 3;
	4 -> toxicity;
	4 -> "('par', 'accuracy')";
	4 -> "('accuracy', 'toxicity')";
	toxicity -> accuracy;
	toxicity -> "('accuracy', 'toxicity')";
	downloaded -> Bloom;
	free -> downloaded;
	said -> Face;
	par -> said;
	par -> "('par', 'accuracy')";
	accuracy -> par;
	accuracy -> "('par', 'accuracy')";
	accuracy -> "('accuracy', 'toxicity')";
	5 -> 4;
	5 -> language;
	5 -> "('key', 'difference')";
	5 -> "('stronger', 'focus')";
	5 -> "('focus', 'languages')";
	5 -> "('dominant', 'English', 'language')";
	key -> 5;
	key -> "('key', 'difference')";
	language -> focus;
	language -> English;
	language -> "('focus', 'languages')";
	language -> "('dominant', 'English', 'language')";
	difference -> key;
	difference -> "('key', 'difference')";
	stronger -> difference;
	stronger -> "('stronger', 'focus')";
	focus -> stronger;
	focus -> "('stronger', 'focus')";
	focus -> "('focus', 'languages')";
	dominant -> language;
	dominant -> "('dominant', 'English', 'language')";
	English -> dominant;
	English -> "('dominant', 'English', 'language')";
	6 -> Bloom;
	6 -> 5;
	6 -> "('numerous', 'datasets')";
	6 -> "('details', 'datasets')";
	6 -> "('datasets', 'development')";
	6 -> "('development', 'training')";
	6 -> "('training', 'Bloom')";
	collected -> BigScience;
	numerous -> collected;
	numerous -> "('numerous', 'datasets')";
	numerous -> foundation;
	numerous -> "('numerous', 'applications')";
	datasets -> numerous;
	datasets -> detail;
	datasets -> "('numerous', 'datasets')";
	datasets -> "('details', 'datasets')";
	datasets -> "('datasets', 'development')";
	publishing -> datasets;
	detail -> publishing;
	detail -> "('details', 'datasets')";
	training -> development;
	training -> "('development', 'training')";
	training -> "('training', 'Bloom')";
	7 -> 6;
	7 -> deception;
	7 -> "('Responsible', 'AI')";
	7 -> "('AI', 'License')";
	7 -> "('Bloom', 'areas')";
	7 -> "('areas', 'law')";
	7 -> "('law', 'enforcement')";
	7 -> "('enforcement', 'healthcare')";
	7 -> "('healthcare', 'deception')";
	release -> 7;
	deception -> healthcare;
	deception -> "('healthcare', 'deception')";
	fall -> release;
	Responsible -> fall;
	Responsible -> "('Responsible', 'AI')";
	AI -> alternative;
	AI -> Responsible;
	AI -> "('Responsible', 'AI')";
	AI -> "('AI', 'License')";
	AI -> "('alternative', 'AI')";
	AI -> "('AI', 'applications')";
	License -> AI;
	License -> "('AI', 'License')";
	developed -> License;
	prohibits -> BigScience;
	area -> Bloom;
	area -> "('Bloom', 'areas')";
	area -> "('areas', 'law')";
	law -> area;
	law -> "('areas', 'law')";
	law -> "('law', 'enforcement')";
	enforcement -> law;
	enforcement -> "('law', 'enforcement')";
	enforcement -> "('enforcement', 'healthcare')";
	healthcare -> enforcement;
	healthcare -> "('enforcement', 'healthcare')";
	healthcare -> "('healthcare', 'deception')";
	8 -> 7;
	8 -> interface;
	8 -> "('OpenAI', 'example')";
	8 -> "('example', 'BigScience')";
	unlike -> 8;
	interface -> directly;
	OpenAI -> unlike;
	OpenAI -> "('OpenAI', 'example')";
	example -> OpenAI;
	example -> "('OpenAI', 'example')";
	example -> "('example', 'BigScience')";
	effectively -> BigScience;
	prevent -> effectively;
	misuse -> prevent;
	because -> misuse;
	model -> because;
	directly -> available;
	company -> tech;
	company -> "('tech', 'companies')";
	now -> Bloom;
	expected -> now;
	serve -> expected;
	foundation -> serve;
	application -> numerous;
	application -> AI;
	application -> "('numerous', 'applications')";
	application -> "('AI', 'applications')";
	importantly -> application;
	create -> project;
	big -> application;
	big -> "('big', 'tech')";
	tech -> big;
	tech -> "('big', 'tech')";
	tech -> "('tech', 'companies')";
}
